{
    "rules": {
        "admin": {
            ".write": false,
            ".read": false
        },
        "receiver": {
            ".write": "auth !== null && auth.uid === root.child('admin').val()",
            ".read": false
        },
        "messages": {
            ".read": "auth !== null && auth.uid === root.child('admin').val()",
            "$key": {
                ".write": "!data.exists()",
                ".validate": "(newData.hasChildren(['name', 'phone', 'email', 'message']) || newData.hasChildren(['name', 'phone', 'message']) || newData.hasChildren(['name', 'email', 'message'])) && (newData.child('email').val().matches(/^([0-9a-zA-Z]+([_.-]?[0-9a-zA-Z]+)*@[0-9a-zA-Z]+[0-9,a-z,A-Z,.,-]*(.){1}[a-zA-Z]{2,4})+$/) || newData.child('phone').val().matches(/^(\\([0-9]{2}\\)|[0-9]{2})?[ \\.\\-]?9?[0-9]{2}[ \\.\\-]?[0-9]{2}[ \\.\\-]?[0-9]{4}$/))",
                "name": {
                    ".validate": "newData.isString() && newData.val().matches(/^[^0-9_!¡?÷?¿/\\+=@#$%ˆ&*(){}|~<>;:\\[\\],. ]{2,}[^0-9_!¡?÷?¿/\\+=@#$%ˆ&*(){}|~<>;:\\[\\],.]{0,48}$/)"
                },
                "phone": {
                    ".validate": "newData.isString() && newData.val().matches(/^(\\([0-9]{2}\\)|[0-9]{2})?[ \\.\\-]?9?[0-9]{2}[ \\.\\-]?[0-9]{2}[ \\.\\-]?[0-9]{4}$/) || newData.val() === ''"
                },
                "email": {
                    ".validate": "newData.isString() && newData.val().matches(/^([0-9a-zA-Z]+([_.-]?[0-9a-zA-Z]+)*@[0-9a-zA-Z]+[0-9,a-z,A-Z,.,-]*(.){1}[a-zA-Z]{2,4})+$/) || newData.val() === ''"
                },
                "message": {
                    ".validate": "newData.isString() && newData.val().length >= 10 && newData.val().length <= 100"
                },
                "$other": {
                    ".validate": false
                }
            }
        },
        "errors": {
            ".read": false,
            "$key": {
                ".write": "!data.exists()",
                ".validate": "newData.hasChildren(['error', 'values'])",
                "error": {
                    ".validate": "newData.isString() && newData.val().matches(/^[A-Z_]+$/)"
                },
                "values": {
                    ".validate": true
                },
                "$other": {
                    ".validate": false
                }
            }
        }
    }
}
